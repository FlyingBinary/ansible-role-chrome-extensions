---

# Role states:
#   - app = yes, ext =  no  -> Nothing to do, exit silently
#   - app =  no, ext =  no  -> Nothing to do, exit silently
#   - app = yes, ext = yes  -> Proceed with installing extensions
#   - app =  no, ext = yes  -> Print debug message, but don't fail the role unless role_strict is yes

- set_fact:
    global_ext: False

- debug:
    msg: "1 Global extension list switch is {{ global_ext }}"

- set_fact:
    group_ext: False

- set_fact:
    personal_ext: False

- set_fact:
    global_ext: True
  when: global_chrome_extensions

- debug:
    msg: "2 Global extension list switch is {{ global_ext }}"

- set_fact:
    global_ext: True
  when: group_chrome_extensions

- debug:
    msg: "3 Group extension list switch is {{ group_ext }}"

- set_fact:
    global_ext: True
  when: personal_chrome_extensions

- debug:
    msg: "4 Personal extension list switch is {{ personal_ext }}"

- set_fact:
    ext_list: False

- set_fact:
    ext_list: True
  when: global_ext or group_ext or personal_ext

- debug:
    msg: "5 Overall extension list switch is {{ ext_list }}"


#  - name: Set status of extension lists
#    set_fact:
#  #    ext_list: bool (global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions)
#      ext_list: "{{ global_chrome_extensions|length }} + {{ group_chrome_extensions|length }} + {{ personal_chrome_extensions|length }} > 0"
#
#  - debug:
#      msg: "Extension list is {{ ext_list }}"
#
#  - include: check_app.yml
#    when: ext_list
#
#  - debug:
#      msg: "Appliction installed is {{ app_installed }}"
#    when: ext_list
#
#  - debug:
#      msg: "Could not find Google Chrome application - proceeding to next task"
#    when: ext_list and not app_installed
#
#  - debug:
#      msg: "Could not find Google Chrome application - failing this play"
#    when: ext_list and not app_installed and role_strict
#
#  - include: install_ext.yml
#    when: ext_list and app_installed

#
#
#
#
#  - name:
#    fail:
#      msg: "Could not find Google Chrome application"
#
#
#
#  - name: Create external extensions directory
#    when: global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions
#
#  - name: Create external extensions preferences files
#    when: global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions
#
#
#
#
#  - name: Install node package manager
#    homebrew: "name=npm state=present"
#    when: global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions
#
#  - name: Install Google Fonts Installer
#    shell: npm install -g google-font-installer
#    when: global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions
#
#  # 2017-0909
#  # Current version of GFI uses the deprecated os.tmpDir call, and Ansible throws an error
#  # Patch the single offending line of code, rather than ignoring Ansible errors
#  # This task can be removed once GFI is updated
#  # https://github.com/lordgiotto/google-font-installer/pull/7
#  - name: Patch Google Fonts Installer
#  #  shell: 'sed -i "" "s/os.tmpDir/os.tmpdir/g" /usr/local/lib/node_modules/google-font-installer/lib/system-font.js'
#    when: global_chrome_extensions or group_chrome_extensions or personal_chrome_extensions
#    lineinfile:
#      path: /usr/local/lib/node_modules/google-font-installer/lib/system-font.js
#      regexp: '^(.*)os.tmpDir(.*)$'
#      line: '\1os.tmpDir\2'
#      backrefs: yes
#
#  - name: Install global Google Fonts
#    shell: gfi install "{{ item }}"
#    with_items: "{{ global_chrome_extensions }}"
#    when: global_chrome_extensions
#
#  - name: Install group Google Fonts
#    shell: gfi install "{{ item }}"
#    with_items: "{{ group_chrome_extensions }}"
#    when: group_chrome_extensions
#
#  - name: Install personal Google Fonts
#    shell: gfi install "{{ item }}"
#    with_items: "{{ personal_chrome_extensions }}"
#    when: personal_chrome_extensions
